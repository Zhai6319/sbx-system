#spring:
#  shardingsphere:
#    rules:
#      sharding:
#        key-generators:
#          snowflake:
#            type: SNOWFLAKE
#            props:
#              worker-id: 123
#        sharding-algorithms:
#          user-table-strategy-inline:
#            type: INLINE
#            props:
#              algorithm-expression: user_info_$->{user_type % 2}
#        tables:
#          user_info:
#            actual-data-nodes: sbx-system-dev.user_info_$->{0..1}
#            table-strategy:
#              standard:
#                sharding-column: user_type
#                sharding-algorithm-name: user-table-strategy-inline
#    props:
#      spl:
#        show: true

sbx:
  ddx:
    api-key: tj3rzXkEFBnWWIStcGB7lbarEGJEIn6S
# akka 工作端口，可选，默认 27777
#powerjob:
#  worker:
#    akka-port: 27777
#  # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称
#    app-name: sbx-system
#  # 调度服务器地址，IP:Port 或 域名，多值逗号分隔
#    server-address: 192.168.1.12:7700
#  # 持久化方式，可选，默认 disk
#    store-strategy: disk
#  # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192
#    max-result-length: 4096
#  # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192
#    max-appended-wf-context-length: 4096
# 负载均衡算法配置
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    #希望可以拓展该驱动，支持更多url 如：
    #url: jdbc:shardingsphere:nacos:127.0.0.1:8848:username:password:namespace:xxx.yaml
    #url: jdbc:shardingsphere:spring-cloud-config:127.0.0.1:8848:username:password:namespace:xxx.yaml
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:sharding-${spring.profiles.active}.yaml
    #username: 配置中心用户名
    #password: 配置中心密码